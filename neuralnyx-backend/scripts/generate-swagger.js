#!/usr/bin/env node

/**
 * Build-time Swagger generator
 * This script generates the OpenAPI specification during deployment
 * and stores it as a static file that can be served directly
 */

const fs = require('fs');
const path = require('path');

// This would be populated by reading your API Gateway configuration
// or by analyzing your CDK constructs
const generateSwaggerSpec = () => {
  return {
    openapi: '3.0.1',
    info: {
      title: 'Neuralynx Backend API',
      description: 'A comprehensive API for user authentication, domain management, and onboarding',
      version: '1.0.0',
    },
    servers: [
      {
        url: 'https://8532iatotg.execute-api.ap-southeast-1.amazonaws.com/api',
        description: 'AWS API Gateway Server',
      },
    ],
    components: {
      securitySchemes: {
        customAuth: {
          type: 'apiKey',
          in: 'header',
          name: 'Authorization',
          description: 'Custom JWT token authentication',
        },
      },
    },
    paths: {
      // This would be generated by analyzing your API constructs
      '/auth/signup': {
        post: {
          summary: 'SignupUser',
          description: 'Create a new user account',
          requestBody: {
            required: true,
            content: {
              'application/json': {
                schema: {
                  type: 'object',
                  required: ['email', 'password', 'firstName', 'lastName'],
                  properties: {
                    email: { type: 'string', format: 'email' },
                    password: { type: 'string', minLength: 8 },
                    firstName: { type: 'string' },
                    lastName: { type: 'string' },
                  },
                },
              },
            },
          },
          responses: {
            '201': {
              description: 'User created successfully',
              content: {
                'application/json': {
                  schema: {
                    type: 'object',
                    properties: {
                      success: { type: 'boolean' },
                      message: { type: 'string' },
                      data: {
                        type: 'object',
                        properties: {
                          userSub: { type: 'string' },
                          userConfirmed: { type: 'boolean' },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
      // Add more paths here...
    },
  };
};

const main = () => {
  console.log('Generating Swagger specification...');
  
  const spec = generateSwaggerSpec();
  const outputPath = path.join(__dirname, '..', 'assets', 'swagger.json');
  
  // Ensure assets directory exists
  const assetsDir = path.dirname(outputPath);
  if (!fs.existsSync(assetsDir)) {
    fs.mkdirSync(assetsDir, { recursive: true });
  }
  
  // Write the spec to file
  fs.writeFileSync(outputPath, JSON.stringify(spec, null, 2));
  
  console.log(`Swagger spec generated at: ${outputPath}`);
};

if (require.main === module) {
  main();
}

module.exports = { generateSwaggerSpec };
